<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知乐园</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://anshenzheng.github.io/"/>
  <updated>2017-07-09T14:16:05.000Z</updated>
  <id>https://anshenzheng.github.io/</id>
  
  <author>
    <name>Annan An</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript中的Prototype</title>
    <link href="https://anshenzheng.github.io/2017/07/09/Javascript%E4%B8%AD%E7%9A%84Prototype/"/>
    <id>https://anshenzheng.github.io/2017/07/09/Javascript中的Prototype/</id>
    <published>2017-07-09T14:11:25.000Z</published>
    <updated>2017-07-09T14:16:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Prototype-是什么"><a href="#Prototype-是什么" class="headerlink" title="Prototype 是什么"></a>Prototype 是什么</h3><p>Javascript中，prototype是函数的一个属性，它本身是一个对象，而这个对象的构造函数指向函数本身。<br>描述比较抽象，但是通过以下代码就很容易理解：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ff</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"this is function ff"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(ff.prototype.constructor == ff);</div><div class="line"><span class="comment">// 打印结果：</span></div><div class="line"><span class="comment">// true</span></div></pre></td></tr></table></figure>
<blockquote>
<p>由上也不难推出以下几个特殊对象的prototype：</p>
<ul>
<li>Array.prototype 是一个数组</li>
<li>String.prototype 是一个字符串</li>
<li>Object.prototype 是一个对象</li>
</ul>
</blockquote>
<p>需要注意的是，prototype属性只能用于函数，如果引用某个具体对象的prototye属性，则其为undefined。</p>
<p>例如：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">ff</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"this is function ff"</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(ff.prototype); </div><div class="line"><span class="comment">//打印结果：</span></div><div class="line"><span class="comment">// [object Object]</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(ff.prototype)); </div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// &#123;&#125;</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Object</span>().prototype)</div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// undefined</span></div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> ff().prototype)</div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// 猜猜看是什么 :)</span></div></pre></td></tr></table></figure>
<h3 id="Prototype-有什么用"><a href="#Prototype-有什么用" class="headerlink" title="Prototype 有什么用"></a>Prototype 有什么用</h3><p>通过prototype可以为函数对象添加新的属性和方法, 所有通过 new 方法实现函数对象都会拥有新添加的方法和属性，相当于间接实现了继承。</p>
<p>例如：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">animal</span>(<span class="params">name</span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = name;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">&#125;</div><div class="line"></div><div class="line">animal.prototype.type = <span class="string">"animal"</span>;</div><div class="line">animal.prototype.sayHi = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"Hi, I am "</span> + <span class="keyword">this</span>.name);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">var</span> cat = <span class="keyword">new</span> animal(<span class="string">'cat'</span>);</div><div class="line"><span class="keyword">var</span> dog = <span class="keyword">new</span> animal(<span class="string">'dog'</span>);</div><div class="line"></div><div class="line"><span class="built_in">console</span>.log(cat.type);</div><div class="line"><span class="built_in">console</span>.log(cat.name);</div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// animal</span></div><div class="line"><span class="comment">// cat</span></div><div class="line"><span class="built_in">console</span>.log(dog.type);</div><div class="line"><span class="built_in">console</span>.log(dog.name);</div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// animal</span></div><div class="line"><span class="comment">// dog</span></div><div class="line"></div><div class="line">cat.sayHi();</div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// Hi, I am cat</span></div><div class="line">dog.sayHi();</div><div class="line"><span class="comment">//打印结果:</span></div><div class="line"><span class="comment">// Hi, I am dog</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Prototype-是什么&quot;&gt;&lt;a href=&quot;#Prototype-是什么&quot; class=&quot;headerlink&quot; title=&quot;Prototype 是什么&quot;&gt;&lt;/a&gt;Prototype 是什么&lt;/h3&gt;&lt;p&gt;Javascript中，prototype是函数的一
    
    </summary>
    
      <category term="前端" scheme="https://anshenzheng.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="https://anshenzheng.github.io/tags/javascript/"/>
    
      <category term="prototype" scheme="https://anshenzheng.github.io/tags/prototype/"/>
    
  </entry>
  
  <entry>
    <title>高数常用定理及使用</title>
    <link href="https://anshenzheng.github.io/2017/07/08/%E9%AB%98%E6%95%B0%E5%B8%B8%E7%94%A8%E5%AE%9A%E7%90%86%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://anshenzheng.github.io/2017/07/08/高数常用定理及使用/</id>
    <published>2017-07-08T05:37:44.000Z</published>
    <updated>2017-07-08T08:52:58.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="有界性定理"><a href="#有界性定理" class="headerlink" title="有界性定理"></a>有界性定理</h3><p>要求：只用不证<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%9C%89%E7%95%8C%E6%80%A7%E5%AE%9A%E7%90%86.png?raw=true" alt=""></p>
<h3 id="最值定理"><a href="#最值定理" class="headerlink" title="最值定理"></a>最值定理</h3><p>要求：只用不证<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%9C%80%E5%80%BC%E5%AE%9A%E7%90%86.png?raw=true" alt=""></p>
<h3 id="介值定理"><a href="#介值定理" class="headerlink" title="介值定理"></a>介值定理</h3><p>要求：只用不证<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E4%BB%8B%E5%80%BC%E5%AE%9A%E7%90%861.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E4%BB%8B%E5%80%BC%E5%AE%9A%E7%90%862.png?raw=true" alt=""></p>
<h3 id="积分中值定理"><a href="#积分中值定理" class="headerlink" title="积分中值定理"></a>积分中值定理</h3><p><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%A7%AF%E5%88%86%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86.png?raw=true" alt=""></p>
<h3 id="积分保号定理"><a href="#积分保号定理" class="headerlink" title="积分保号定理"></a>积分保号定理</h3><p><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%A7%AF%E5%88%86%E4%BF%9D%E5%8F%B7%E6%80%A7%E5%AE%9A%E7%90%86.png?raw=true" alt=""></p>
<h3 id="零点定理"><a href="#零点定理" class="headerlink" title="零点定理"></a>零点定理</h3><p>要求：只用不证<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E9%9B%B6%E7%82%B9%E5%AE%9A%E7%90%86.png?raw=true" alt=""></p>
<h3 id="费马定理"><a href="#费马定理" class="headerlink" title="费马定理"></a>费马定理</h3><p>要求：会用会证<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E8%B4%B9%E9%A9%AC%E5%AE%9A%E7%90%86.png?raw=true" alt=""></p>
<h3 id="罗尔定理"><a href="#罗尔定理" class="headerlink" title="罗尔定理"></a>罗尔定理</h3><p>要求：会用会证（最重要）<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%BD%97%E5%B0%94%E5%AE%9A%E7%90%86%E4%BD%BF%E7%94%A81.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%BD%97%E5%B0%94%E5%AE%9A%E7%90%86%E4%BD%BF%E7%94%A82.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%BD%97%E5%B0%94%E5%AE%9A%E7%90%86%E4%BD%BF%E7%94%A83.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%BD%97%E5%B0%94%E5%AE%9A%E7%90%86%E4%BD%BF%E7%94%A84.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E7%BD%97%E5%B0%94%E5%AE%9A%E7%90%86%E4%BD%BF%E7%94%A85.png?raw=true" alt=""></p>
<p>若题设条件“=”较多，则优先考虑使用罗尔定理。</p>
<h3 id="拉格朗日定理"><a href="#拉格朗日定理" class="headerlink" title="拉格朗日定理"></a>拉格朗日定理</h3><p><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%86.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B8%AD%E5%80%BC%E5%AE%9A%E7%90%862.png?raw=true" alt=""></p>
<h3 id="柯西中值定理"><a href="#柯西中值定理" class="headerlink" title="柯西中值定理"></a>柯西中值定理</h3><p>要求：会用会证<br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%9F%AF%E8%A5%BF%E5%AE%9A%E7%90%861.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%9F%AF%E8%A5%BF%E5%AE%9A%E7%90%862.png?raw=true" alt=""></p>
<h3 id="泰勒定理（公式）"><a href="#泰勒定理（公式）" class="headerlink" title="泰勒定理（公式）"></a>泰勒定理（公式）</h3><p>要求：只用不证</p>
<h4 id="带拉格朗日余项的公式"><a href="#带拉格朗日余项的公式" class="headerlink" title="带拉格朗日余项的公式"></a>带拉格朗日余项的公式</h4><p><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%B3%B0%E5%8B%92%E5%85%AC%E5%BC%8F1.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E6%B3%B0%E5%8B%92%E5%85%AC%E5%BC%8F2.png?raw=true" alt=""></p>
<h4 id="带佩亚诺余项的公式"><a href="#带佩亚诺余项的公式" class="headerlink" title="带佩亚诺余项的公式"></a>带佩亚诺余项的公式</h4><p><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E4%BD%A9%E4%BA%9A%E8%AF%BA.png?raw=true" alt=""></p>
<h4 id="麦克劳林公式（0点展开）"><a href="#麦克劳林公式（0点展开）" class="headerlink" title="麦克劳林公式（0点展开）"></a>麦克劳林公式（0点展开）</h4><p><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E9%BA%A6%E5%85%8B%E5%8A%B3%E6%9E%97.png?raw=true" alt=""><br><img src="https://github.com/Anshenzheng/kao-yan-bi-ji/blob/master/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E9%BA%A6%E5%85%8B%E5%8A%B3%E6%9E%972.png?raw=true" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;有界性定理&quot;&gt;&lt;a href=&quot;#有界性定理&quot; class=&quot;headerlink&quot; title=&quot;有界性定理&quot;&gt;&lt;/a&gt;有界性定理&lt;/h3&gt;&lt;p&gt;要求：只用不证&lt;br&gt;&lt;img src=&quot;https://github.com/Anshenzheng/kao-ya
    
    </summary>
    
      <category term="考研" scheme="https://anshenzheng.github.io/categories/%E8%80%83%E7%A0%94/"/>
    
    
      <category term="高数" scheme="https://anshenzheng.github.io/tags/%E9%AB%98%E6%95%B0/"/>
    
      <category term="考研" scheme="https://anshenzheng.github.io/tags/%E8%80%83%E7%A0%94/"/>
    
  </entry>
  
  <entry>
    <title>MySQL中的日志文件</title>
    <link href="https://anshenzheng.github.io/2017/07/07/MySQL%E4%B8%AD%E7%9A%84%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6/"/>
    <id>https://anshenzheng.github.io/2017/07/07/MySQL中的日志文件/</id>
    <published>2017-07-07T10:08:58.000Z</published>
    <updated>2017-07-07T15:17:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>日志文件是数据库中非常重要的文件，可以用于操作查询，性能分析，事务保障以及数据恢复等。MySQL中的常见日志文件如下：</p>
<h3 id="错误日志：Error-Log"><a href="#错误日志：Error-Log" class="headerlink" title="错误日志：Error Log"></a>错误日志：Error Log</h3><p>错误日志记录了MySQL运行过程中所有较为严重的警告和错误信息，以及每次启动和关闭的详细信息。<br>默认情况下，错误记录日志功能是关闭的，错误信息会被输出到标准错误输出stderr。我们可以在启动时开启<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--log-error</div></pre></td></tr></table></figure></p>
<p>选项开启错入日志功能。<br>错误日志默认以hostname.err命名存放于数据目录下， 但是可以使用命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">log-error[=file_name]</div></pre></td></tr></table></figure></p>
<p>来修改存放的目录和文件名。</p>
<h3 id="二进制日志：Binary-Log-amp-Binary-Log-Index"><a href="#二进制日志：Binary-Log-amp-Binary-Log-Index" class="headerlink" title="二进制日志：Binary Log &amp; Binary Log Index"></a>二进制日志：Binary Log &amp; Binary Log Index</h3><p>二进制日志是MySQL中最重要的日志之一，通过：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--log-bin[=file_name]</div></pre></td></tr></table></figure></p>
<p>开启，MySQL会将所有修改数据库的Query(Query语句，执行时间，消耗资源，相关事务信息等)以二进制的形式记录于该日志文件。</p>
<p>以下是binlog的一些附加选项参数：<br>–max_binlog_size - binlog的最大存储上限，当日志达到该上限时，会自动创建一个新日志。为了保证事务安全，MySQL不会将同一个事务分开记录到两个binlog中，故有时会超出最大上限。<br>–binlog-do-db=db_name - 指明仅对db_name数据库记录binlog，忽略其它数据库执行的Query(db_name指当前正在连接的数据库)<br>–binlog-ignore-db=db_name - 功能与–binlog-do-db相反 (db_name指当前正在连接的数据库)<br>mysql-bin.index - 记录所有Binary Log的绝对路径，保证MySQL线程可以顺利的找到所需要的log文件。</p>
<h3 id="更新日志-Update-Log"><a href="#更新日志-Update-Log" class="headerlink" title="更新日志: Update Log"></a>更新日志: Update Log</h3><p>更新日志是MySQL在较老版本上使用的，功能与bin-log类似，以简单的文本格式记录，MySQL5.0之后不再支持。</p>
<h3 id="查询日志-Query-Log"><a href="#查询日志-Query-Log" class="headerlink" title="查询日志: Query Log"></a>查询日志: Query Log</h3><p>查询日志记录MySQL中所有的Query，可以通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--log[=file_name]</div></pre></td></tr></table></figure></p>
<p>来开启日志。<br>由于记录了所有的Query，包括所有的Select语句，故体积比较大，开启后对性能影响也比较大。默认文件名为数据目录下的hostname.log.</p>
<h3 id="慢查询日志：Slow-Query-Log"><a href="#慢查询日志：Slow-Query-Log" class="headerlink" title="慢查询日志：Slow Query Log"></a>慢查询日志：Slow Query Log</h3><p>用于记录执行时间较长的Query，通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--log-slow-queries[=file_name]</div></pre></td></tr></table></figure></p>
<p>开启，默认文件名为数据目录下的hostname-slow.log。<br>慢查询日志采用简单文本格式，记录了语句执行的时刻，消耗的时间，执行的用户以及连接主机等相关的信息。MySQL还提供了mysqlslowdump工具程序专门用来分析慢查询日志，帮助数据库管理人员解决可能存在的性能问题。</p>
<h3 id="InnoDB在线Redo日志：InnoDB-REDO-Log"><a href="#InnoDB在线Redo日志：InnoDB-REDO-Log" class="headerlink" title="InnoDB在线Redo日志：InnoDB REDO Log"></a>InnoDB在线Redo日志：InnoDB REDO Log</h3><p>InnoDB是一个事务安全的存储引擎，其安全性主要是通过REDO日志和记录在表空间的UNDO信息来保证的。<br>REDO日志中记录了InnoDB所做的所有物理变更和事务信息，默认存放于数据目录下，可以通过innodb_log_group_home_dir来更改日志存放位置，通过innodb_log_files_in_group设置日志数量。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;日志文件是数据库中非常重要的文件，可以用于操作查询，性能分析，事务保障以及数据恢复等。MySQL中的常见日志文件如下：&lt;/p&gt;
&lt;h3 id=&quot;错误日志：Error-Log&quot;&gt;&lt;a href=&quot;#错误日志：Error-Log&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
      <category term="数据库" scheme="https://anshenzheng.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://anshenzheng.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Mysql" scheme="https://anshenzheng.github.io/tags/Mysql/"/>
    
  </entry>
  
</feed>
